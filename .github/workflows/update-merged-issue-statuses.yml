# Copyright 2023 Practically.io All rights reserved

name: Update Merged Issue Statuses

on: push

# on:
#   push:
#     branches:
#       - main

jobs:
  update-merged-issue-statuses:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get issue numbers
        id: get-issue-numbers
        uses: actions/github-script@v5
        with:
          script: |
            const commits = context.payload.commits;
            const issueNumbers = [];
            for (const commit of commits) {
              const matches = commit.message.match(/(Fixes Issue: #|Ref: #)(\d+)/g);
              if (matches) {
                for (const match of matches) {
                  const issueNumber = match.split('#')[1]; // get the issue number after '#'
                  if (!issueNumbers.includes(issueNumber)) {
                    issueNumbers.push(issueNumber);
                  }
                }
              }
            }
            if (issueNumbers.length === 0) {
              console.log('No issue numbers found in commits');
              return '';
            }
            return issueNumbers.join(' ');

      - name: Get issue details
        if: steps.get-issue-numbers.outputs.result != ''
        uses: actions/github-script@v5
        with:
          script: |
            const issues = '${{ steps.get-issue-numbers.outputs.result }}'.split(' ');
            for (const issue of issues) {
              console.log(context.repo);

              try {
                // Get issue details
                const { data: issueDetails } = await github.rest.issues.get({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: parseInt(issue)
                });

                console.log(`Details fetched successfully for issue ${issue}`);
              } catch (error) {
                console.error(`Error getting details for issue ${issue}: ${error.message}`);
                core.setFailed(error.message);
              }
            }
        env:
          ISSUES: ${{ env.ISSUES }}

      - name: Update issue labels
        if: steps.get-issue-numbers.outputs.result != ''
        uses: actions/github-script@v5
        with:
          script: |
            const issues = '${{ steps.get-issue-numbers.outputs.result }}'.split(' ');
            for (const issue of issues) {
              // Get current labels
              const { data: currentLabels } = await github.rest.issues.listLabelsOnIssue({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: parseInt(issue)
              });

              // Prepare new labels
              let newLabels = currentLabels.map(label => label.name);
              newLabels = newLabels.filter(label => label !== 'status: to do' && label !== 'status: in progress');
              newLabels.push('status: in review');

              // Update labels
              try {
                await github.rest.issues.setLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: parseInt(issue),
                  labels: newLabels
                });
                console.log(`Labels updated successfully for issue ${issue}`);
              } catch (error) {
                console.error(`Error updating labels for issue ${issue}: ${error.message}`);
                core.setFailed(error.message);
              }
            }
        env:
          ISSUES: ${{ env.ISSUES }}

      # - name: Build Slack message
      #   id: build-slack-message
      #   run: |
      #     SLACK_MESSAGE=":rocket: Deployment successful!\n"
      #     for ISSUE in $ISSUES; do
      #       ISSUE_DETAILS=$(cat temp/issue_$ISSUE.json)
      #       TITLE=$(echo "$ISSUE_DETAILS" | jq -r '.title')
      #       URL=$(echo "$ISSUE_DETAILS" | jq -r '.html_url')
      #       SLACK_MESSAGE+="- $TITLE (<$URL|#${ISSUE}>)\n"
      #     done
      #     echo "SLACK_MESSAGE=$SLACK_MESSAGE" >> $GITHUB_ENV
